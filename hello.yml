# First Play
- name: Play - Handle Files in all hosts
  hosts: all
  tasks:
  - name: all host are identified with a file
    copy:
      content: My family is {{ ansible_os_family }}
      dest: /family.txt
      mode: '777'

# Second play
- name: Play - for Alpines Nodejs app
  hosts: app_group
  tasks:

  - name: NodeJs is installed
    apk:
      name: "{{ item }}"
      update_cache: yes
      state: latest
    loop:
    - nodejs
    - nodejs-npm
  - name: app directory is created
    file:
      path: /node-app
      state: directory
  - name: app is installed
    template:
      src: app.js.j2
      dest: /node-app/app.js
  - name: app dependencies file is copied
    copy:
      src: package.json
      dest: /node-app/package.json
  - name: app dependencies are installed
    npm:
      path: /node-app
      state: present
      production: true
  - name: Install forever (to run Node.js app).
    npm: name=forever global=yes state=present
  
  - name: Check list of Node.js apps running.
    command: forever list
    register: forever_list
    changed_when: false

  - name: Start example Node.js app.
    command: forever start /node-app/app.js
    when: "forever_list.stdout.find('/node-app/app.js') == -1"

# Third play
# - name: Play - install nginx on loadbalancer
#   hosts: loadbalancer
#   become: yes
#   tasks:
#     - name: Debug Host Information
#       debug:
#         var: inventory_hostname

#     - name: Ensure Nginx is installed and it is the latest version
#       shell: apk --no-cache add nginx
    
#     - name: Copy config file into nginx directory
#       shell: ls 
#       register: ls_output
    
#     - name: ls Output
#       debug:
#         var: ls_output.stdout_lines

#     - name: Debugging information
#       debug:
#         msg:
#           - "Current working directory: {{ ansible_env.PWD }}"
#           - "Contents of the directory: {{ lookup('fileglob', './') }}"

#     - name: Copy config file into nginx directory
#       command:
#         cmd: "mv /nginx.cfg /etc/nginx/nginx.cfg"
#         chdir: "/"
#       ignore_errors: yes

#     - name: Restart Nginx
#       command: nginx -s reload

- name: Play - Install and configure Nginx as a LoadBalancer
  hosts: loadbalancer
  become: yes
  tasks:
    - name: Update cache
      apk: update_cache=yes

    - name: Install Nginx
      apk:
        name: nginx
        state: latest

    - name: Copy the Nginx config file to /etc/nginx/sites-available
      copy:
        src: ./nginx.cfg
        dest: /etc/nginx/sites-available/

    - name: Check if sites-enabled directory exists
      stat:
        path: /etc/nginx/sites-enabled/
      register: sites_enabled_dir

    - name: Make sites-enabled directory if it doesn't exist
      command: mkdir /etc/nginx/sites-enabled/
      when: not sites_enabled_dir.stat.exists

    - name: Create symlink of the config file at /etc/nginx/sites-enabled
      file:
        src: /etc/nginx/sites-available/nginx.cfg
        dest: /etc/nginx/sites-enabled/nginx.cfg
        state: link

    - name: Restart nginx to apply changes
      command: nginx -s reload
      # service:
      #   name: nginx
      #   state: restarted
